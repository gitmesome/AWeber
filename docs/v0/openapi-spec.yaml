openapi: 3.0.1
info:
  title: AWeber code sample
  description: 'Is Christian Ullman worth his salt?  Yes, the answer is yes, in spades!'
  version: 0.0.1
externalDocs:
  description: Git repo including docs
  url: https://github.com/gitmesome/AWeber
servers:
    - url: http://0.0.0.0/v0

paths:
  /widgets:
    get:
      operationId: src.v0.widgets.read_all
      tags:
        - Widget
      summary: Read all the widgets
      description: Read all the widgets sort by name
      responses:
        200:
          description: Successfully read all widgets
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    widget_id:
                      type: integer
                      description: Id of the widget
                    name:
                      type: string
                      description: Name of the widget
                    number_of_parts:
                      type: integer
                      description: How parts are in thsi widget
                    created_at:
                      type: string
                      description: Create timestamp
                    updated_at:
                      type: string
                      description: Updated timestamp
    post:
      operationId: src.v0.widgets.create
      tags:
        - Widget
      summary: Create a widgets
      requestBody:
        description: Create a new widget
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name of widget to create
                number_of_parts:
                  type: integer
                  description: number of parts
              required:
                - name
                - number_of_parts
      responses:
        201:
          description: Successfully created widget
          content:
            application/json:
              schema:
                properties:
                  widget_id:
                    type: integer
                    description: Id of the widget
                  name:
                    type: string
                    description: Name of the widget
                  number_of_parts:
                    type: integer
                    description: How parts are in thsi widget
                  created_at:
                    type: string
                    description: Create timestamp
                  updated_at:
                    type: string
                    description: Updated timestamp
    put:
      operationId: src.v0.widgets.update
      tags:
        - Widget
      summary: Update a widgets
      requestBody:
        description: Update a new widget
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                widget_id:
                  type: integer
                  description: number of parts
                name:
                  type: string
                  description: name of widget to create
                number_of_parts:
                  type: integer
                  description: number of parts
              required:
                - widget_id
                - name
                - number_of_parts
      responses:
        200:
          description: Successfully created widget
          content:
            application/json:
              schema:
                properties:
                  widget_id:
                    type: integer
                    description: Id of the widget
                  name:
                    type: string
                    description: Name of the widget
                  number_of_parts:
                    type: integer
                    description: How parts are in thsi widget
                  created_at:
                    type: string
                    description: Create timestamp
                  updated_at:
                    type: string
                    description: Updated timestamp
  /widgets/{widget_id}:
    get:
      operationId: src.v0.widgets.read_one
      tags:
        - Widget
      summary: Read a singel widget
      description: Read a singel widget
      parameters:
        - in: path
          name: widget_id
          description: Id of the widget to get
          schema:
            type: integer
          required: True
      responses:
        200:
          description: Successfully read widget from db
          content:
            application/json:
              schema:
                type: object
                properties:
                  widget_id:
                    type: integer
                    description: Id of the widget
                  name:
                    type: string
                    description: Name of the widget
                  number_of_parts:
                    type: integer
                    description: How parts are in thsi widget
                  created_at:
                    type: string
                    description: Create timestamp
                  updated_at:
                    type: string
                    description: Updated timestamp
    delete:
      operationId: src.v0.widgets.delete
      tags:
        - Widgit
      summary: Delete a widget from the db
      description: Delete a widget
      parameters:
        - in: path
          name: widget_id
          description: Id of the widget to delete
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Successfully deleted a widget
